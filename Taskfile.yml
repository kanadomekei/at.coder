version: '3'

tasks:
  new:
    desc: "Create a new contest directory in ./ABC/ using acc."
    dir: ABC
    cmds:
      - acc new {{.CLI_ARGS}}

  fmt:
    desc: "Format Go or Rust code in the current directory."
    dir: '{{.PWD}}'
    cmds:
      - |
        if [ -f main.go ]; then
          echo "Formatting Go code..."
          gofmt -w .
        elif [ -f Cargo.toml ]; then
          echo "Formatting Rust code..."
          cargo fmt
        elif [ -f main.zig ]; then
          echo "Formatting Zig code..."
          zig fmt main.zig
        else
          echo "No go, rust, or zig files found to format."
          exit 1
        fi

  lint:
    desc: "Lint Go or Rust code in the current directory."
    dir: '{{.PWD}}'
    cmds:
      - |
        if [ -f main.go ]; then
          echo "Linting Go code..."
          go vet ./...
        elif [ -f Cargo.toml ]; then
          echo "Linting Rust code..."
          cargo clippy
        elif [ -f main.zig ]; then
          echo "Linting Zig code..."
          zig build-exe main.zig && rm main main.o
        else
          echo "No go, rust, or zig files found to lint."
          exit 1
        fi

  test:
    desc: "Formats, lints, and tests the solution."
    dir: '{{.PWD}}'
    cmds:
      - task: fmt
      - task: lint
      - |
        if [ -f main.go ]; then
          oj test -d ../tests -c "go run main.go"
        elif [ -f Cargo.toml ]; then
          oj test -d ../tests -c "cargo run"
        elif [ -f main.zig ]; then
          oj test -d ../tests -c "zig run main.zig"
        else
          echo "No go, rust, or zig files found to test."
          exit 1
        fi

  submit:
    desc: "Submit the solution in the current directory using acc."
    dir: '{{.PWD}}'
    cmds:
      - |
        if [ -f main.go ]; then
          acc submit main.go
        elif [ -f Cargo.toml ]; then
          acc submit
        elif [ -f main.zig ]; then
          acc submit main.zig
        else
          echo "No go, rust, or zig files found to submit."
          exit 1
        fi
